apply plugin: 'java'

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.testng:testng:6.11'
    compile 'org.seleniumhq.selenium:selenium-java:3.5.2'
    compile 'org.hamcrest:java-hamcrest:2.0.0.0'
    compile 'com.beust:jcommander:1.48'
    compile 'com.thoughtworks.xstream:xstream-distribution:1.4.9'
    compile 'com.google.code.gson:gson:2.7'
    compile 'ch.qos.logback:logback-classic:1.1.7'
    compile 'mysql:mysql-connector-java:8.0.7-dmr'
    compile 'org.hibernate:hibernate-core:5.2.2.Final'
    compile 'org.robotframework:robotframework:3.0.2'
}

task testGroups(type: Test) {
    useTestNG() {
        suites 'src/test/resources/testng-groups.xml'
        if (project.hasProperty('browser')) {
            systemProperty 'browser', "${browser}"
        }
        if (project.hasProperty('platform')) {
            systemProperty 'platform', "${platform}"
        }
        if (project.hasProperty('target')) {
            systemProperty 'target', "${target}"
        }
        if (project.hasProperty('verifyUI')) {
            systemProperty 'verifyUI', "${verifyUI}"
        }
    }
}

task testContacts(type: Test) {
    useTestNG() {
        suites 'src/test/resources/testng-contacts.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty 'browser', "${browser}"
    }
    if (project.hasProperty('platform')) {
        systemProperty 'platform', "${platform}"
    }
    if (project.hasProperty('target')) {
        systemProperty 'target', "${target}"
    }
    if (project.hasProperty('verifyUI')) {
        systemProperty 'verifyUI', "${verifyUI}"
    }
}

task testAll(type: Test) {
    useTestNG() {
        suites 'src/test/resources/testng-all-tests.xml'
    }
    if (project.hasProperty('browser')) {
        systemProperty 'browser', "${browser}"
    }
    if (project.hasProperty('platform')) {
        systemProperty 'platform', "${platform}"
    }
    if (project.hasProperty('target')) {
        systemProperty 'target', "${target}"
    }
    if (project.hasProperty('verifyUI')) {
        systemProperty 'verifyUI', "${verifyUI}"
    }
}

task rf(type: JavaExec) {
    main = 'org.robotframework.RobotFramework'
    classpath = sourceSets.test.runtimeClasspath
    args '--outputdir', 'build/rf-report'
    args 'src/test/resources/rf'
}